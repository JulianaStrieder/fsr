% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/builder_functions.R
\name{spa_creator}
\alias{spa_creator}
\title{spa_creator}
\usage{
spa_creator(tbl, fuzz_policy = "fsp", const_policy = "voronoi", ...)
}
\arguments{
\item{tbl}{A data.frame or tibble with the following format: (x, y, z)}

\item{fuzz_policy}{The fuzzification policy to be employed by the algorithm. See details below.}

\item{const_policy}{The construction policy to be used by the algorithm. See details below.}

\item{...}{Parameters for the chosen policies. See details below.}
}
\value{
A tibble in the format `(classes, pgeoms)`, where `classes` is a character column and `pgeoms` is a list of `pgeom` objects.
This means that a spatial plateau object is created for representing a specific class of the point dataset.
}
\description{
spa_creator builds a set of spatial plateau objects from a given point dataset assigned with domain-specific numerical values
}
\details{
It follows the two-stage construction systematic approach described in [1].

The input `tbl` is a point dataset where each point represents the location of a phenomenon treated by the application.
Further, each point is annotated with numerical data that describe its meaning in the application.
Therefore, `tbl` must have three columns: _x_, _y_ for the locations, and _z_ for the domain-specific numeric values.

`fuzz_policy` refers to the method used by the **fuzzification stage**.
This stage aims to assign membership degrees to each point of the dataset.
It accepts two possible values only: either `"fsp"` (default) or "`fcp"`.

`"fsp"` stands for _fuzzy set policy_ and requires two parameters that should be informed in `...`:
- `classes`: A character vector containing the name of classes
- `mfs`: A vector of membership functions generated by the function `genmf` of `FuzzyR` package. Each membership function _i_ represents the class _i_, where _i_ in `length(classes)`

`"fcp"` stands for _fuzzy clustering policy_ and requires the `e1071` package. Its possible parameters, informed in `...`, are:
- `k`: A numeric value that refers to the number of groups to be created
- `method`: A fuzzy clustering method of the package `e1071`, which can be either `"cmeans"` (default) or `"cshell"`
- `use_coords`: A Boolean value to indicate whether the columns (x, y) should be used in the clustering algorithm (default is `FALSE`)
- `iter`: A numeric indicating the number of maximum iterations of the clustering algorithm (default is 100)

`const_policy` refers to the method used by the **construction stage**.
This stage aims to create polygons from the labeled point dataset and use them to build spatial plateau objects.
It accepts two possible values only: either `"voronoi"` (default) or "`delaunay"`.

`"voronoi"` stands for _Voronoi diagram policy_ and has one optional parameter that can be provided in `...`:
- `base_poly`: An `sfg` object that will be used to clip the generated polygons (optional argument). If this parameter is not provided, the Voronoi is created by using a bounding box (standard behavior of `sf`).

`"delaunay"` stands for _Delaunay triangulation policy_, which accepts the following parameters in `...`:
- `base_poly`: An `sfg` object that will be used to clip the generated triangles (optional argument).
- `tnorm`: A t-norm used to calculate the membership degree of the triangle. It should be the name of a vector function.
Possible values are `"min"` (default), and `"prod"`.
Note that it is possible to use your own t-norms. A t-norm should has the following signature: `FUN(x)` where
- _x_ is a numeric vector. Such a function should return a single numeric value.
}
\references{
[1] Carniel, A. C.; Schneider, M.
A Systematic Approach to Creating Fuzzy Region Objects from Real Spatial Data Sets.
In Proceedings of the 2019 IEEE International Conference on Fuzzy Systems (FUZZ-IEEE 2019), pp. 1-6, 2019.
<https://doi.org/10.1109/FUZZ-IEEE.2019.8858878>
}
\seealso{
create_empty_pgeom
}
